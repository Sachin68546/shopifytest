<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Shopify App Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap 5 CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Bootstrap Icons -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4"></script>

    <style>
      /* Use flex layout for sidebar + content */
      body {
        display: flex;
        margin: 0;
        min-height: 100vh;
        overflow: hidden;
        font-family: sans-serif;
      }
      /* Sidebar: fixed 20% width */
      #sidebar {
        width: 20%;
        max-width: 300px;
        background: #343a40;
        color: #adb5bd;
        padding-top: 56px;
        overflow-y: auto;
      }
      #sidebar .nav-link {
        color: #adb5bd;
      }
      #sidebar .nav-link:hover,
      #sidebar .nav-link.active {
        color: #fff;
        background: #495057;
      }
      /* Content: flex grow */
      #content {
        flex: 1;
        overflow-y: auto;
        padding-top: 56px;
        padding: 20px;
        background: #f8f9fa;
      }
      /* Navbar fixes */
      .navbar.fixed-top {
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 200;
      }
      /* Overview cards */
      .overview-card {
        border: none;
        border-radius: 0.75rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s;
      }
      .overview-card:hover {
        transform: translateY(-4px);
      }
      .overview-icon {
        font-size: 2rem;
        opacity: 0.3;
      }
      /* Chart cards */
      .chart-card {
        border: none;
        border-radius: 0.75rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 1rem;
        margin-bottom: 1rem;
        background: #fff;
      }
      .chart-container {
        position: relative;
        height: 300px;
      }
      section {
        margin-bottom: 2rem;
      }
      h2 {
        margin-bottom: 1rem;
      }
      .table-responsive {
        max-height: 400px;
        overflow-y: auto;
        background: #fff;
        padding: 1rem;
        border-radius: 0.5rem;
      }
    </style>
  </head>
  <body>
    <!-- Top Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Profit First Analytics</a>
        <div class="ms-auto text-white">Shop: <strong><%= shop %></strong></div>
      </div>
    </nav>

    <!-- Sidebar -->
    <nav id="sidebar" class="d-flex flex-column pt-3">
      <ul class="nav nav-pills flex-column mb-auto">
        <li class="nav-item">
          <a href="#overview" class="nav-link active"
            ><i class="bi bi-speedometer2 me-2"></i>Overview</a
          >
        </li>
        <li class="nav-item">
          <a href="#charts" class="nav-link"
            ><i class="bi bi-bar-chart-line me-2"></i>Charts</a
          >
        </li>
        <li class="nav-item">
          <a href="#orders" class="nav-link"
            ><i class="bi bi-bag me-2"></i>Orders</a
          >
        </li>
        <li class="nav-item">
          <a href="#products" class="nav-link"
            ><i class="bi bi-box-seam me-2"></i>Products</a
          >
        </li>
        <li class="nav-item">
          <a href="#customers" class="nav-link"
            ><i class="bi bi-people me-2"></i>Customers</a
          >
        </li>
      </ul>
    </nav>

    <!-- Main Content -->
    <div id="content">
      <!-- Overview -->
      <section id="overview">
        <h2>Overview Metrics</h2>
        <div class="row gy-3">
          <% [ ['totalSales','$','Total Sales','bi-currency-dollar
          text-success'], ['totalOrders','','Total Orders','bi-bag
          text-primary'], ['totalCustomers','','Total Customers','bi-people
          text-info'], ['avgOrderValue','$','Avg Order Value','bi-calculator
          text-warning'] ].forEach(([id,prefix,label,icon]) => { %>
          <div class="col-lg-3 col-md-4 col-sm-6">
            <div class="card overview-card p-3 h-100 bg-white">
              <div class="d-flex align-items-center">
                <i class="bi <%= icon %> overview-icon"></i>
                <div class="ms-3">
                  <div class="h5" id="<%= id %>">—</div>
                  <small class="text-muted"><%= label %></small>
                </div>
              </div>
            </div>
          </div>
          <% }); %>
        </div>
        <div class="row gy-3 mt-3">
          <% [ ['newCustomers','','New Customers','bi-person-plus
          text-success'], ['returningCustomers','','Returning
          Customers','bi-person-check text-primary'], ['bestProduct','','Best
          Selling','bi-star text-warning'], ['leastProduct','','Lowest
          Selling','bi-star-half text-danger']
          ].forEach(([id,prefix,label,icon]) => { %>
          <div class="col-lg-3 col-md-4 col-sm-6">
            <div class="card overview-card p-3 h-100 bg-white">
              <div class="d-flex align-items-center">
                <i class="bi <%= icon %> overview-icon"></i>
                <div class="ms-3">
                  <div class="h5 text-truncate" id="<%= id %>">—</div>
                  <small class="text-muted"><%= label %></small>
                </div>
              </div>
            </div>
          </div>
          <% }); %>
        </div>
      </section>

      <!-- Charts -->
      <section id="charts">
        <h2>Charts & Trends</h2>
        <div class="row gy-4">
          <% [ ['salesChart','Sales Over Time'], ['customerChart','Customer
          Types'], ['productChart','Top Products'], ['ordersChart','Orders Per
          Day'] ].forEach(([canvasId,title]) => { %>
          <div class="col-lg-6">
            <div class="card chart-card">
              <h6><%= title %></h6>
              <div class="chart-container">
                <canvas id="<%= canvasId %>"></canvas>
              </div>
            </div>
          </div>
          <% }); %>
        </div>
      </section>

      <!-- Tables -->
      <% [ ['orders','Recent Orders',['Order #','Date','Total']],
      ['products','Products',['Title','Inventory']],
      ['customers','Customers',['Name','Email']] ].forEach(([id,title,cols])=>{
      %>
      <section id="<%= id %>">
        <h2><%= title %></h2>
        <div class="table-responsive">
          <table class="table table-striped align-middle bg-white">
            <thead class="table-dark">
              <tr>
                <% cols.forEach(c=>{ %>
                <th><%= c %></th>
                <% }); %>
              </tr>
            </thead>
            <tbody id="<%= id %>-table"></tbody>
          </table>
        </div>
      </section>
      <% }); %>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      const shop = "<%= shop %>";
      function groupByDate(items, key) {
        return items.reduce((a, i) => {
          const d = new Date(i[key]).toISOString().split("T")[0];
          a[d] = (a[d] || 0) + parseFloat(i.totalPriceSet.shopMoney.amount);
          return a;
        }, {});
      }
      Promise.all([
        fetch(`/orders?shop=${shop}`).then((r) => r.json()),
        fetch(`/products?shop=${shop}`).then((r) => r.json()),
        fetch(`/customers?shop=${shop}`).then((r) => r.json()),
      ]).then(([orders, prods, custs]) => {
        const sales = orders.reduce(
          (s, o) => s + parseFloat(o.totalPriceSet.shopMoney.amount),
          0
        );
        const ords = orders.length;
        const custCount = custs.length;
        const avg = ords ? sales / ords : 0;
        const emailCount = orders.reduce((m, o) => {
          const e = o.customer.email;
          m[e] = (m[e] || 0) + 1;
          return m;
        }, {});
        const newC = Object.values(emailCount).filter((v) => v === 1).length;
        const retC = Object.values(emailCount).filter((v) => v > 1).length;
        const prodCount = orders.reduce((m, o) => {
          const k = o.name;
          m[k] = (m[k] || 0) + 1;
          return m;
        }, {});
        const sorted = Object.entries(prodCount).sort((a, b) => b[1] - a[1]);
        const best = sorted[0]?.[0] || "N/A";
        const least = sorted[sorted.length - 1]?.[0] || "N/A";
        document.getElementById("totalSales").textContent =
          "$" + sales.toFixed(2);
        document.getElementById("totalOrders").textContent = ords;
        document.getElementById("totalCustomers").textContent = custCount;
        document.getElementById("avgOrderValue").textContent =
          "$" + avg.toFixed(2);
        document.getElementById("newCustomers").textContent = newC;
        document.getElementById("returningCustomers").textContent = retC;
        document.getElementById("bestProduct").textContent = best;
        document.getElementById("leastProduct").textContent = least;
        function fill(id, data, keys) {
          const tb = document.getElementById(id + "-table");
          data.forEach((item) => {
            const tr = document.createElement("tr");
            tr.innerHTML = keys.map((k) => `<td>${item[k]}</td>`).join("");
            tb.appendChild(tr);
          });
        }
        fill(
          "orders",
          orders.map((o) => ({
            "Order #": o.name,
            Date: new Date(o.createdAt).toLocaleDateString(),
            Total:
              "$" + parseFloat(o.totalPriceSet.shopMoney.amount).toFixed(2),
          })),
          ["Order #", "Date", "Total"]
        );
        fill(
          "products",
          prods.map((p) => ({
            title: p.title,
            totalInventory: p.totalInventory,
          })),
          ["title", "totalInventory"]
        );
        fill(
          "customers",
          custs.map((c) => ({ Name: c.displayName, Email: c.email })),
          ["Name", "Email"]
        );
        const salesBy = groupByDate(orders, "createdAt"),
          days = Object.keys(salesBy).sort();
        new Chart(document.getElementById("salesChart"), {
          type: "line",
          data: {
            labels: days,
            datasets: [
              {
                label: "Sales",
                data: days.map((d) => salesBy[d]),
                tension: 0.3,
              },
            ],
          },
        });
        new Chart(document.getElementById("customerChart"), {
          type: "doughnut",
          data: {
            labels: ["New", "Returning"],
            datasets: [{ data: [newC, retC] }],
          },
        });
        const top5 = sorted.slice(0, 5);
        new Chart(document.getElementById("productChart"), {
          type: "bar",
          data: {
            labels: top5.map((x) => x[0]),
            datasets: [{ label: "Orders", data: top5.map((x) => x[1]) }],
          },
        });
        new Chart(document.getElementById("ordersChart"), {
          type: "bar",
          data: {
            labels: days,
            datasets: [
              {
                label: "Orders",
                data: days.map(
                  (d) => orders.filter((o) => o.createdAt.startsWith(d)).length
                ),
              },
            ],
          },
        });
      });
    </script>
  </body>
</html>
